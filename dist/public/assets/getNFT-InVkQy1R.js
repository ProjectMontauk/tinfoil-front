import{bR as a,f4 as e,f5 as d}from"./index-1FuSQaQ_.js";import{f as o}from"./fetchTokenMetadata-C0qE5F49.js";import{totalSupply as u}from"./totalSupply-D2tdQ1kF.js";import"./detectExtension-BOKm1Te9.js";const i="0x0e89341c",I=[{type:"uint256",name:"tokenId"}],k=[{type:"string"}];async function f(t){return a({contract:t.contract,method:[i,I,k],params:[t.tokenId]})}async function F(t){const{useIndexer:c=!0}=t;if(c)try{return await m(t)}catch{return await n(t)}return await n(t)}async function m(t){const c=await e({client:t.contract.client,chain:t.contract.chain,contractAddress:t.contract.address,tokenId:t.tokenId});return c||n(t)}async function n(t){const[c,r]=await Promise.all([f({contract:t.contract,tokenId:t.tokenId}),u({contract:t.contract,id:t.tokenId}).catch(()=>0n)]);return d(await o({client:t.contract.client,tokenId:t.tokenId,tokenUri:c}).catch(()=>({id:t.tokenId,type:"ERC1155",uri:c})),{tokenId:t.tokenId,tokenUri:c,type:"ERC1155",owner:null,supply:r,tokenAddress:t.contract.address,chainId:t.contract.chain.id})}export{F as getNFT};
