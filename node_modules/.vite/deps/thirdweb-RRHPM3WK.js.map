{
  "version": 3,
  "sources": ["../../@thirdweb-dev/insight/src/client/client.gen.ts", "../../@thirdweb-dev/insight/src/client/sdk.gen.ts", "../../@thirdweb-dev/insight/src/configure.ts"],
  "sourcesContent": ["// This file is auto-generated by @hey-api/openapi-ts\n\nimport {\n  type Config,\n  type ClientOptions as DefaultClientOptions,\n  createClient,\n  createConfig,\n} from \"@hey-api/client-fetch\";\nimport type { ClientOptions } from \"./types.gen.js\";\n\n/**\n * The `createClientConfig()` function will be called on client initialization\n * and the returned object will become the client's initial configuration.\n *\n * You may want to initialize your client this way instead of calling\n * `setConfig()`. This is useful for example if you're using Next.js\n * to ensure your client always has the correct values.\n */\nexport type CreateClientConfig<T extends DefaultClientOptions = ClientOptions> =\n  (\n    override?: Config<DefaultClientOptions & T>,\n  ) => Config<Required<DefaultClientOptions> & T>;\n\nexport const client = createClient(createConfig<ClientOptions>());\n", "// This file is auto-generated by @hey-api/openapi-ts\n\nimport type {\n  Client,\n  Options as ClientOptions,\n  TDataShape,\n} from \"@hey-api/client-fetch\";\nimport { client as _heyApiClient } from \"./client.gen.js\";\nimport type {\n  DeleteV1WebhooksByWebhookIdData,\n  DeleteV1WebhooksByWebhookIdError,\n  DeleteV1WebhooksByWebhookIdResponse,\n  GetV1BlocksData,\n  GetV1BlocksError,\n  GetV1BlocksResponse,\n  GetV1ContractsAbiByContractAddressData,\n  GetV1ContractsAbiByContractAddressError,\n  GetV1ContractsAbiByContractAddressResponse,\n  GetV1ContractsMetadataByContractAddressData,\n  GetV1ContractsMetadataByContractAddressError,\n  GetV1ContractsMetadataByContractAddressResponse,\n  GetV1EventsByContractAddressBySignatureData,\n  GetV1EventsByContractAddressBySignatureError,\n  GetV1EventsByContractAddressBySignatureResponse,\n  GetV1EventsByContractAddressData,\n  GetV1EventsByContractAddressError,\n  GetV1EventsByContractAddressResponse,\n  GetV1EventsData,\n  GetV1EventsError,\n  GetV1EventsResponse,\n  GetV1NftsBalanceByOwnerAddressData,\n  GetV1NftsBalanceByOwnerAddressResponse,\n  GetV1NftsByContractAddressByTokenIdData,\n  GetV1NftsByContractAddressByTokenIdError,\n  GetV1NftsByContractAddressByTokenIdResponse,\n  GetV1NftsByContractAddressData,\n  GetV1NftsByContractAddressError,\n  GetV1NftsByContractAddressResponse,\n  GetV1NftsCollectionsByContractAddressData,\n  GetV1NftsCollectionsByContractAddressError,\n  GetV1NftsCollectionsByContractAddressResponse,\n  GetV1NftsData,\n  GetV1NftsError,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdError,\n  GetV1NftsMetadataRefreshByContractAddressByTokenIdResponse,\n  GetV1NftsMetadataRefreshByContractAddressData,\n  GetV1NftsMetadataRefreshByContractAddressError,\n  GetV1NftsMetadataRefreshByContractAddressResponse,\n  GetV1NftsOwnersByContractAddressByTokenIdData,\n  GetV1NftsOwnersByContractAddressByTokenIdError,\n  GetV1NftsOwnersByContractAddressByTokenIdResponse,\n  GetV1NftsOwnersByContractAddressData,\n  GetV1NftsOwnersByContractAddressError,\n  GetV1NftsOwnersByContractAddressResponse,\n  GetV1NftsResponse,\n  GetV1NftsTransfersByContractAddressByTokenIdData,\n  GetV1NftsTransfersByContractAddressByTokenIdError,\n  GetV1NftsTransfersByContractAddressByTokenIdResponse,\n  GetV1NftsTransfersByContractAddressData,\n  GetV1NftsTransfersByContractAddressError,\n  GetV1NftsTransfersByContractAddressResponse,\n  GetV1NftsTransfersData,\n  GetV1NftsTransfersError,\n  GetV1NftsTransfersResponse,\n  GetV1NftsTransfersTransactionByTransactionHashData,\n  GetV1NftsTransfersTransactionByTransactionHashError,\n  GetV1NftsTransfersTransactionByTransactionHashResponse,\n  GetV1ResolveByInputData,\n  GetV1ResolveByInputError,\n  GetV1ResolveByInputResponse,\n  GetV1TokensErc20ByOwnerAddressData,\n  GetV1TokensErc20ByOwnerAddressResponse,\n  GetV1TokensErc721ByOwnerAddressData,\n  GetV1TokensErc721ByOwnerAddressResponse,\n  GetV1TokensErc1155ByOwnerAddressData,\n  GetV1TokensErc1155ByOwnerAddressResponse,\n  GetV1TokensLookupData,\n  GetV1TokensLookupResponse,\n  GetV1TokensPriceData,\n  GetV1TokensPriceResponse,\n  GetV1TokensPriceSupportedData,\n  GetV1TokensPriceSupportedResponse,\n  GetV1TokensTransfersByContractAddressData,\n  GetV1TokensTransfersByContractAddressError,\n  GetV1TokensTransfersByContractAddressResponse,\n  GetV1TokensTransfersData,\n  GetV1TokensTransfersError,\n  GetV1TokensTransfersResponse,\n  GetV1TokensTransfersTransactionByTransactionHashData,\n  GetV1TokensTransfersTransactionByTransactionHashError,\n  GetV1TokensTransfersTransactionByTransactionHashResponse,\n  GetV1TransactionsByContractAddressBySignatureData,\n  GetV1TransactionsByContractAddressBySignatureError,\n  GetV1TransactionsByContractAddressBySignatureResponse,\n  GetV1TransactionsByContractAddressData,\n  GetV1TransactionsByContractAddressError,\n  GetV1TransactionsByContractAddressResponse,\n  GetV1TransactionsData,\n  GetV1TransactionsError,\n  GetV1TransactionsResponse,\n  GetV1WalletsByWalletAddressTransactionsData,\n  GetV1WalletsByWalletAddressTransactionsError,\n  GetV1WalletsByWalletAddressTransactionsResponse,\n  GetV1WebhooksData,\n  GetV1WebhooksError,\n  GetV1WebhooksResponse,\n  PatchV1WebhooksByWebhookIdData,\n  PatchV1WebhooksByWebhookIdError,\n  PatchV1WebhooksByWebhookIdResponse,\n  PostV1DecodeByContractAddressData,\n  PostV1DecodeByContractAddressError,\n  PostV1DecodeByContractAddressResponse,\n  PostV1WebhooksByWebhookIdResendOtpData,\n  PostV1WebhooksByWebhookIdResendOtpError,\n  PostV1WebhooksByWebhookIdResendOtpResponse,\n  PostV1WebhooksByWebhookIdVerifyData,\n  PostV1WebhooksByWebhookIdVerifyError,\n  PostV1WebhooksByWebhookIdVerifyResponse,\n  PostV1WebhooksData,\n  PostV1WebhooksError,\n  PostV1WebhooksResponse,\n  PostV1WebhooksTestData,\n  PostV1WebhooksTestError,\n  PostV1WebhooksTestResponse,\n} from \"./types.gen.js\";\n\nexport type Options<\n  TData extends TDataShape = TDataShape,\n  ThrowOnError extends boolean = boolean,\n> = ClientOptions<TData, ThrowOnError> & {\n  /**\n   * You can provide a client instance returned by `createClient()` instead of\n   * individual options. This might be also useful if you want to implement a\n   * custom client.\n   */\n  client?: Client;\n  /**\n   * You can pass arbitrary values through the `meta` object. This can be\n   * used to access values that aren't defined as part of the SDK function.\n   */\n  meta?: Record<string, unknown>;\n};\n\n/**\n * Get webhooks\n * Get a list of webhooks or a single webhook by ID\n */\nexport const getV1Webhooks = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1WebhooksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1WebhooksResponse,\n    GetV1WebhooksError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks\",\n    ...options,\n  });\n};\n\n/**\n * Create webhook\n * Create a new webhook. The webhook will start out as suspended and an OTP code will be sent to the webhook URL. This OTP code must be verified using the Verify Webhook endpoint within 15 minutes.\n */\nexport const postV1Webhooks = <ThrowOnError extends boolean = false>(\n  options?: Options<PostV1WebhooksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).post<\n    PostV1WebhooksResponse,\n    PostV1WebhooksError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Delete webhook\n * Delete a webhook. This action cannot be undone.\n */\nexport const deleteV1WebhooksByWebhookId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<DeleteV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).delete<\n    DeleteV1WebhooksByWebhookIdResponse,\n    DeleteV1WebhooksByWebhookIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}\",\n    ...options,\n  });\n};\n\n/**\n * Update webhook\n * Update a webhook. If the URL is updated, it needs to verified again the same way as when creating a webhook.\n */\nexport const patchV1WebhooksByWebhookId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PatchV1WebhooksByWebhookIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).patch<\n    PatchV1WebhooksByWebhookIdResponse,\n    PatchV1WebhooksByWebhookIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Verify webhook\n * Verify a webhook using a OTP code that was sent to the webhook URL. The webhook will be activated after verification.\n */\nexport const postV1WebhooksByWebhookIdVerify = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PostV1WebhooksByWebhookIdVerifyData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).post<\n    PostV1WebhooksByWebhookIdVerifyResponse,\n    PostV1WebhooksByWebhookIdVerifyError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}/verify\",\n    ...options,\n  });\n};\n\n/**\n * Resend OTP code\n * Resend a OTP code to the webhook URL. This will invalidate the old OTP and will again expire after 15 minutes.\n */\nexport const postV1WebhooksByWebhookIdResendOtp = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PostV1WebhooksByWebhookIdResendOtpData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).post<\n    PostV1WebhooksByWebhookIdResendOtpResponse,\n    PostV1WebhooksByWebhookIdResendOtpError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/{webhook_id}/resend-otp\",\n    ...options,\n  });\n};\n\n/**\n * Test webhook\n * Test your webhook URL. This will send a test event to the webhook URL signed with an example secret 'test123'. NB! The payload does not necessarily match your webhook filters. You can however use it to test signature verification and payload format handling.\n */\nexport const postV1WebhooksTest = <ThrowOnError extends boolean = false>(\n  options?: Options<PostV1WebhooksTestData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).post<\n    PostV1WebhooksTestResponse,\n    PostV1WebhooksTestError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/webhooks/test\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Get events\n * Get events\n */\nexport const getV1Events = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1EventsData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1EventsResponse,\n    GetV1EventsError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events\",\n    ...options,\n  });\n};\n\n/**\n * Get contract events\n * Get contract events\n */\nexport const getV1EventsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1EventsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1EventsByContractAddressResponse,\n    GetV1EventsByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract events with specific signature\n * Get specific contract events\n */\nexport const getV1EventsByContractAddressBySignature = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1EventsByContractAddressBySignatureData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1EventsByContractAddressBySignatureResponse,\n    GetV1EventsByContractAddressBySignatureError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/events/{contractAddress}/{signature}\",\n    ...options,\n  });\n};\n\n/**\n * Get transactions\n * Get transactions\n */\nexport const getV1Transactions = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TransactionsData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TransactionsResponse,\n    GetV1TransactionsError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions\",\n    ...options,\n  });\n};\n\n/**\n * Get contract transactions\n * Get contract transactions\n */\nexport const getV1TransactionsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TransactionsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TransactionsByContractAddressResponse,\n    GetV1TransactionsByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract transactions with specific signature\n * Get specific contract transactions\n */\nexport const getV1TransactionsByContractAddressBySignature = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1TransactionsByContractAddressBySignatureData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TransactionsByContractAddressBySignatureResponse,\n    GetV1TransactionsByContractAddressBySignatureError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/transactions/{contractAddress}/{signature}\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers by transaction\n * Get token transfers by transaction\n */\nexport const getV1TokensTransfersTransactionByTransactionHash = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1TokensTransfersTransactionByTransactionHashData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensTransfersTransactionByTransactionHashResponse,\n    GetV1TokensTransfersTransactionByTransactionHashError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers/transaction/{transaction_hash}\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers by contract\n * Get token transfers by contract\n */\nexport const getV1TokensTransfersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensTransfersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensTransfersByContractAddressResponse,\n    GetV1TokensTransfersByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get token transfers by wallet address\n * Get token transfers by wallet address\n */\nexport const getV1TokensTransfers = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1TokensTransfersData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensTransfersResponse,\n    GetV1TokensTransfersError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/transfers\",\n    ...options,\n  });\n};\n\n/**\n * Get ERC-20 balances by address\n * Get ERC-20 balances for a given address\n */\nexport const getV1TokensErc20ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc20ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc20ByOwnerAddressResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc20/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * @deprecated\n * Get ERC-721 balances by address\n * Get ERC-721 (NFT) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n */\nexport const getV1TokensErc721ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc721ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc721ByOwnerAddressResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc721/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * @deprecated\n * Get ERC-1155 balances by address\n * Get ERC-1155 (Multi Token) balances for a given address [BEING DEPRECATED IN FAVOR OF /nfts/balance]\n */\nexport const getV1TokensErc1155ByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1TokensErc1155ByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensErc1155ByOwnerAddressResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/erc1155/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get supported tokens for price data\n * Get supported tokens for price data\n */\nexport const getV1TokensPriceSupported = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TokensPriceSupportedData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TokensPriceSupportedResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/price/supported\",\n    ...options,\n  });\n};\n\n/**\n * Get token price\n * Get price in USD for given token(s)\n */\nexport const getV1TokensPrice = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1TokensPriceData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1TokensPriceResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/price\",\n    ...options,\n  });\n};\n\n/**\n * Token lookup\n * Look up a fungible token by symbol\n */\nexport const getV1TokensLookup = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1TokensLookupData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1TokensLookupResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/tokens/lookup\",\n    ...options,\n  });\n};\n\n/**\n * Resolve\n * Resolve\n */\nexport const getV1ResolveByInput = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1ResolveByInputData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ResolveByInputResponse,\n    GetV1ResolveByInputError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/resolve/{input}\",\n    ...options,\n  });\n};\n\n/**\n * Get blocks\n * Get blocks\n */\nexport const getV1Blocks = <ThrowOnError extends boolean = false>(\n  options?: Options<GetV1BlocksData, ThrowOnError>,\n) => {\n  return (options?.client ?? _heyApiClient).get<\n    GetV1BlocksResponse,\n    GetV1BlocksError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/blocks\",\n    ...options,\n  });\n};\n\n/**\n * Get contract ABI​\n * Get contract ABI​\n */\nexport const getV1ContractsAbiByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1ContractsAbiByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ContractsAbiByContractAddressResponse,\n    GetV1ContractsAbiByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/contracts/abi/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get contract metadata​\n * Get contract metadata​\n */\nexport const getV1ContractsMetadataByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1ContractsMetadataByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1ContractsMetadataByContractAddressResponse,\n    GetV1ContractsMetadataByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/contracts/metadata/{contractAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Decode logs and transactions​\n * Decode logs and transactions​\n */\nexport const postV1DecodeByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<PostV1DecodeByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).post<\n    PostV1DecodeByContractAddressResponse,\n    PostV1DecodeByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/decode/{contractAddress}\",\n    ...options,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...options?.headers,\n    },\n  });\n};\n\n/**\n * Get NFT balances by address\n * Get NFT balances for a given address\n */\nexport const getV1NftsBalanceByOwnerAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsBalanceByOwnerAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsBalanceByOwnerAddressResponse,\n    unknown,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/balance/{ownerAddress}\",\n    ...options,\n  });\n};\n\n/**\n * Get collection\n * Retrieve metadata about a collection\n */\nexport const getV1NftsCollectionsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsCollectionsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsCollectionsByContractAddressResponse,\n    GetV1NftsCollectionsByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/collections/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFTs by owner\n * Get NFTs by owner\n */\nexport const getV1Nfts = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1NftsData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsResponse,\n    GetV1NftsError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT owners by contract\n * Get NFT owners by contract\n */\nexport const getV1NftsOwnersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsOwnersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsOwnersByContractAddressResponse,\n    GetV1NftsOwnersByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/owners/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT owners by token\n * Get NFT owners by token\n */\nexport const getV1NftsOwnersByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsOwnersByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsOwnersByContractAddressByTokenIdResponse,\n    GetV1NftsOwnersByContractAddressByTokenIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/owners/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by owner\n * Get NFT transfers by owner\n */\nexport const getV1NftsTransfers = <ThrowOnError extends boolean = false>(\n  options: Options<GetV1NftsTransfersData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersResponse,\n    GetV1NftsTransfersError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by transaction\n * Get NFT transfers by transaction\n */\nexport const getV1NftsTransfersTransactionByTransactionHash = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsTransfersTransactionByTransactionHashData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersTransactionByTransactionHashResponse,\n    GetV1NftsTransfersTransactionByTransactionHashError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/transaction/{transaction_hash}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by contract\n * Get NFT transfers by contract\n */\nexport const getV1NftsTransfersByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsTransfersByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersByContractAddressResponse,\n    GetV1NftsTransfersByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFTs by contract\n * Get NFTs by contract\n */\nexport const getV1NftsByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsByContractAddressResponse,\n    GetV1NftsByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT transfers by token\n * Get NFT transfers by token\n */\nexport const getV1NftsTransfersByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsTransfersByContractAddressByTokenIdData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsTransfersByContractAddressByTokenIdResponse,\n    GetV1NftsTransfersByContractAddressByTokenIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/transfers/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get NFT by token ID\n * Get NFT by token ID\n */\nexport const getV1NftsByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsByContractAddressByTokenIdData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsByContractAddressByTokenIdResponse,\n    GetV1NftsByContractAddressByTokenIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Force refresh collection metadata\n * Force refresh collection metadata for the specified contract (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddress = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1NftsMetadataRefreshByContractAddressData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsMetadataRefreshByContractAddressResponse,\n    GetV1NftsMetadataRefreshByContractAddressError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/metadata/refresh/{contract_address}\",\n    ...options,\n  });\n};\n\n/**\n * Force refresh token metadata\n * Force refresh token metadata for the specified contract and token ID (across multiple chains if provided)\n */\nexport const getV1NftsMetadataRefreshByContractAddressByTokenId = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdData,\n    ThrowOnError\n  >,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdResponse,\n    GetV1NftsMetadataRefreshByContractAddressByTokenIdError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/nfts/metadata/refresh/{contract_address}/{token_id}\",\n    ...options,\n  });\n};\n\n/**\n * Get wallet transactions\n * Get incoming and outgoing transactions for a wallet\n */\nexport const getV1WalletsByWalletAddressTransactions = <\n  ThrowOnError extends boolean = false,\n>(\n  options: Options<GetV1WalletsByWalletAddressTransactionsData, ThrowOnError>,\n) => {\n  return (options.client ?? _heyApiClient).get<\n    GetV1WalletsByWalletAddressTransactionsResponse,\n    GetV1WalletsByWalletAddressTransactionsError,\n    ThrowOnError\n  >({\n    security: [\n      {\n        name: \"x-client-id\",\n        type: \"apiKey\",\n      },\n      {\n        scheme: \"bearer\",\n        type: \"http\",\n      },\n      {\n        in: \"query\",\n        name: \"clientId\",\n        type: \"apiKey\",\n      },\n    ],\n    url: \"/v1/wallets/{wallet_address}/transactions\",\n    ...options,\n  });\n};\n", "import type { Config } from \"@hey-api/client-fetch\";\nimport { client } from \"./client/client.gen.js\";\n\nexport type InsightClientOptions = {\n  readonly clientId: string;\n  readonly secretKey?: string;\n};\n\nexport function configure(\n  options: InsightClientOptions & { override?: Config },\n) {\n  client.setConfig({\n    headers: {\n      ...(options.clientId && { \"x-client-id\": options.clientId }),\n      ...(options.secretKey && { \"x-api-key\": options.secretKey }),\n    },\n    ...(options.override ?? {}),\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
